<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>faux | Lisa DeBruine</title>
    <link>https://debruine.github.io/tag/faux/</link>
      <atom:link href="https://debruine.github.io/tag/faux/index.xml" rel="self" type="application/rss+xml" />
    <description>faux</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Tue, 05 Oct 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://debruine.github.io/media/icon_hud41de7153c7fa400a999f8d222dc5c78_8091_512x512_fill_lanczos_center_3.png</url>
      <title>faux</title>
      <link>https://debruine.github.io/tag/faux/</link>
    </image>
    
    <item>
      <title>Faux</title>
      <link>https://debruine.github.io/project/faux/</link>
      <pubDate>Tue, 05 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://debruine.github.io/project/faux/</guid>
      <description>&lt;p&gt;It is useful to be able to simulate data with a specified structure. The faux package provides some functions to make this process easier for factorial designs and single- or multilevel data.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Simulate from Existing Data</title>
      <link>https://debruine.github.io/post/simdf/</link>
      <pubDate>Sat, 29 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://debruine.github.io/post/simdf/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(faux)
library(tidyverse)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I added a new function to the package &lt;a href=&#34;https://github.com/debruine/faux&#34;&gt;&lt;code&gt;faux&lt;/code&gt;&lt;/a&gt; to generate a new dataframe from an existing dataframe, simulating all numeric columns from normal distributions with the same mean and SD as the existing data and the same correlation structure as the existing data. (Update: faux is now on CRAN!)&lt;/p&gt;
&lt;p&gt;For example, here is the relationship between speed and distance in the built-in dataset &lt;code&gt;cars&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;cars %&amp;gt;%
  ggplot(aes(speed, dist)) + 
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:plot-cars-orig&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://debruine.github.io/posts/simdf_files/figure-html/plot-cars-orig-1.png&#34; alt=&#34;Original cars dataset&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: Original cars dataset
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can create a new sample with the same parameters and 500 rows with the code &lt;code&gt;sim_df(cars, 500)&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_df(cars, 500) %&amp;gt;%
  ggplot(aes(speed, dist)) + 
    geom_point() +
    geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:plot-cars-sim&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://debruine.github.io/posts/simdf_files/figure-html/plot-cars-sim-1.png&#34; alt=&#34;Simulated cars dataset&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Simulated cars dataset
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You can also optionally add grouping variables. For example, here is the relationship between sepal length and width in the built-in dataset &lt;code&gt;iris&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;iris %&amp;gt;%
  ggplot(aes(Sepal.Width, Sepal.Length, color = Species)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:plot-iris-orig&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://debruine.github.io/posts/simdf_files/figure-html/plot-iris-orig-1.png&#34; alt=&#34;Original iris dataset&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Original iris dataset
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;And here is a new sample with 50 observations of each species, made with the code &lt;code&gt;sim_df(iris, 100, &#34;Species&#34;)&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_df(iris, 50, between = &amp;quot;Species&amp;quot;) %&amp;gt;%
  ggplot(aes(Sepal.Width, Sepal.Length, color = Species)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:plot-iris-sim&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://debruine.github.io/posts/simdf_files/figure-html/plot-iris-sim-1.png&#34; alt=&#34;Simulated iris dataset&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Simulated iris dataset
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For now, the function only creates new variables sampled from a continuous normal distribution. I hope to add in other sampling distributions in the future. So you’d need to do any rounding or truncating yourself.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sim_df(iris, 50, between = &amp;quot;Species&amp;quot;) %&amp;gt;%
  mutate_if(is.numeric, round, 1) %&amp;gt;%
  ggplot(aes(Sepal.Width, Sepal.Length, color = Species)) +
  geom_point() +
  geom_smooth(method = &amp;quot;lm&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## `geom_smooth()` using formula &amp;#39;y ~ x&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;figure&#34;&gt;&lt;span id=&#34;fig:plot-iris-sim-round&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;https://debruine.github.io/posts/simdf_files/figure-html/plot-iris-sim-round-1.png&#34; alt=&#34;Simulated iris dataset (rounded)&#34; width=&#34;672&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 5: Simulated iris dataset (rounded)
&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Simulating Multiple Vectors</title>
      <link>https://debruine.github.io/post/rnorm_multi/</link>
      <pubDate>Sat, 22 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://debruine.github.io/post/rnorm_multi/</guid>
      <description>


&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)
library(faux)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I’m working on a package for simulations called &lt;a href=&#34;https://github.com/debruine/faux&#34;&gt;faux&lt;/a&gt;. (Update: faux is now on CRAN!)&lt;/p&gt;
&lt;p&gt;The first function, &lt;code&gt;rnorm_multi&lt;/code&gt;, makes multiple normally distributed vectors with specified relationships and takes the following arguments:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt; = the number of samples required (required)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;vars&lt;/code&gt; = the number of variables to return (default = &lt;code&gt;3&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cors&lt;/code&gt; = the correlations among the variables (can be a single number, vars*vars matrix, vars*vars vector, or a vars*(vars-1)/2 vector; default = &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;mu&lt;/code&gt; = a vector giving the means of the variables (numeric vector of length 1 or vars; default = &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sd&lt;/code&gt; = the standard deviations of the variables (numeric vector of length 1 or vars; default = &lt;code&gt;1&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;varnames&lt;/code&gt; = optional names for the variables (string vector of length vars; default = &lt;code&gt;NULL&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;empirical&lt;/code&gt; = logical. If true, mu, sd and cors specify the empirical not population mean, sd and covariance (default = &lt;code&gt;FALSE&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;example-1&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example 1&lt;/h2&gt;
&lt;p&gt;The following example creates a 100-row dataframe of 3 columns names &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, and &lt;code&gt;C&lt;/code&gt;, with means = 0, SDs = 1, and where r&lt;sub&gt;AB&lt;/sub&gt; = 0.2, r&lt;sub&gt;AC&lt;/sub&gt; = -0.5, and r&lt;sub&gt;BC&lt;/sub&gt; = 0.5.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ex1 &amp;lt;- rnorm_multi(100, 3, c(0.2, -0.5, 0.5), varnames=c(&amp;quot;A&amp;quot;, &amp;quot;B&amp;quot;, &amp;quot;C&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;correlation-matrix-of-sample-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Correlation Matrix of Sample Data&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;A&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;B&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;C&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;A&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.087499&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1202283&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;B&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.0874990&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.0157210&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;C&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1202283&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.015721&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;example-2&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Example 2&lt;/h2&gt;
&lt;p&gt;The following example calculates the correlation matrix, means, and SDs from the &lt;code&gt;iris&lt;/code&gt; dataset and uses them to simulate a dataset of 100 rows with the same parameters.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;dat &amp;lt;- select_if(iris, is.numeric)

iris_sim &amp;lt;- rnorm_multi(
  n = 100, 
  vars = ncol(dat), 
  r = cor(dat),
  mu = summarise_all(dat, mean) %&amp;gt;% t(), 
  sd = summarise_all(dat, sd) %&amp;gt;% t(), 
  varnames = names(dat)
)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;correlation-matrix-of-original-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Correlation Matrix of Original Data&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Width&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Sepal.Length&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1175698&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8717538&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8179411&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Sepal.Width&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1175698&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4284401&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.3661259&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Petal.Length&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8717538&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4284401&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9628654&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Petal.Width&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8179411&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.3661259&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9628654&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;correlation-matrix-of-sample-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Correlation Matrix of Sample Data&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr class=&#34;header&#34;&gt;
&lt;th align=&#34;left&#34;&gt;&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Sepal.Width&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Length&lt;/th&gt;
&lt;th align=&#34;right&#34;&gt;Petal.Width&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Sepal.Length&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1591051&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8491459&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7544625&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Sepal.Width&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.1591051&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4527400&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.3513351&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;odd&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Petal.Length&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.8491459&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.4527400&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9485627&lt;/td&gt;
&lt;/tr&gt;
&lt;tr class=&#34;even&#34;&gt;
&lt;td align=&#34;left&#34;&gt;Petal.Width&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.7544625&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;-0.3513351&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;0.9485627&lt;/td&gt;
&lt;td align=&#34;right&#34;&gt;1.0000000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
