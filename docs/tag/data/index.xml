<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>data | Lisa DeBruine</title>
    <link>https://debruine.github.io/tag/data/</link>
      <atom:link href="https://debruine.github.io/tag/data/index.xml" rel="self" type="application/rss+xml" />
    <description>data</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Sun, 17 Oct 2021 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://debruine.github.io/media/icon_hud41de7153c7fa400a999f8d222dc5c78_8091_512x512_fill_lanczos_center_3.png</url>
      <title>data</title>
      <link>https://debruine.github.io/tag/data/</link>
    </image>
    
    <item>
      <title>Data from Images</title>
      <link>https://debruine.github.io/post/data-from-images/</link>
      <pubDate>Sun, 17 Oct 2021 00:00:00 +0000</pubDate>
      <guid>https://debruine.github.io/post/data-from-images/</guid>
      <description>
&lt;script src=&#34;https://debruine.github.io/post/data-from-images/index_files/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://debruine.github.io/post/data-from-images/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://debruine.github.io/post/data-from-images/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;


&lt;p&gt;I saw this a few days ago and sympathised, because I‚Äôve often wanted to use data that is trapped in images or PDFs. If it‚Äôs not too much, I‚Äôll manually transcribe it, but that‚Äôs so tedious!&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;
&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;
crucial data being published as images ‚Ä¶ üò≠üò≠üò≠üò≠ &lt;a href=&#34;https://t.co/9CKg9NhYtA&#34;&gt;https://t.co/9CKg9NhYtA&lt;/a&gt;
&lt;/p&gt;
‚Äî Shel üá∞üá™ (&lt;span class=&#34;citation&#34;&gt;@Shel_Kariuki&lt;/span&gt;) &lt;a href=&#34;https://twitter.com/Shel_Kariuki/status/1449029768763084814?ref_src=twsrc%5Etfw&#34;&gt;October 15, 2021&lt;/a&gt;
&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;A tweet by &lt;a href=&#34;https://twitter.com/abiyugiday/status/1449257787821789184?s=20&#34;&gt;Abiyu Giday&lt;/a&gt; reminded me that the &lt;code&gt;magick&lt;/code&gt; package has OCR (optical character recognition), so I decided to try it out.&lt;/p&gt;
&lt;div id=&#34;required-packages&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Required packages&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(magick)    # for image processing
library(tesseract) # for OCR image reading
library(dplyr)     # for data wrangling and pipes
library(tidyr)     # for data wrangling
library(stringr)   # for string manipulation
library(ggplot2)   # for plots&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;read-the-image&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Read the image&lt;/h3&gt;
&lt;p&gt;First, you need to read in the image and convert it to text using two functions from the &lt;a href=&#34;https://cran.r-project.org/web/packages/magick/vignettes/intro.html&#34;&gt;&lt;code&gt;magick&lt;/code&gt;&lt;/a&gt; package.&lt;/p&gt;
&lt;p&gt;I use &lt;a href=&#34;https://imagemagick.org/&#34;&gt;ImageMagick&lt;/a&gt; for webmorph development, so had it installed previously. I‚Äôm not sure if installing the R package also sets up the ImageMagick installation. If you‚Äôre on a Windows machine, the easiest way is to use &lt;code&gt;installr::install.imagemagick()&lt;/code&gt;. On a Mac, you can install it with &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt; using &lt;code&gt;brew install imagemagick@6&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now You can read in the image with &lt;code&gt;image_read()&lt;/code&gt; and run OCR on it with &lt;code&gt;image_ocr()&lt;/code&gt;. If you haven‚Äôt installed the &lt;code&gt;tesseract&lt;/code&gt; package yet, the second function will prompt you to.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# original image source:
# https://pbs.twimg.com/media/FBv8P8XXEBgCBvS?format=jpg&amp;amp;name=medium
imgtext &amp;lt;- magick::image_read(&amp;quot;data_image.jpg&amp;quot;) %&amp;gt;%
  magick::image_ocr()&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;process-the-text&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Process the text&lt;/h3&gt;
&lt;p&gt;The result is a single &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;A data type representing strings of text.&#39; href=&#39;https://psyteachr.github.io/glossary/c#character&#39;&gt;character&lt;/a&gt; string that looks like this, so we‚Äôre going to need to do quite a bit of processing to get it into a &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;Data in a rectangular table format, where each row has an entry for each column.&#39; href=&#39;https://psyteachr.github.io/glossary/t#tabular-data&#39;&gt;tabular&lt;/a&gt; format.&lt;/p&gt;
&lt;pre&gt;
rs
COUNTY VACCINES AL |

1. Nairobi 957,147 (31.4%) 25. Homa Bay 33,290 (5.5%)
2. Kiambu 298,723 (18.4%) 26. Migori 32,670 (5.9%)
3. Nakuru 170,684 (13.4%) 27. Kilifi 31,611 (4.0%)
4. Nyeri 134,166 (26.3%) 28. Kisii 30,204 (4.3%)
5. Murang‚Äôa 110,825 (16.4%) 29. Nyamira 29,142 (8.5%)
6. Machakos 100,671 (11.1%) 30. Busia 26,792 (5.8%)
7. Uasin Gishu 92,142 (13.3%) 31. Vihiga 25,172 (7.6%)
8. Kisumu 90,495 (13.8%) 32. Tharaka Nithi 24,386 (9.9%)
9. Mombasa 82,814 (10.3%) 33. Baringo 21,176 (6.2%)
10. Kirinyaga 81,233 (19.6%) 34. Bomet 20,885 (4.5%)
ll. Kajiado 75,960 (11.5%) 35. Elgeyo Marakwet 17,574 (7.2%)
12. Bungoma 66,688 (7.9%) 36. Kwale 17,185 (3.8%)
13. Meru 66,270 (7.0%) 37. Narok 15,410 (2.8%)
14. Kakamega 62,043 (6.3%) 38. Turkana 9,249 (2.0%)
15. Nyandarua 60,574 (16.1%) 39. West Pokot 8,207 (2.9%)
16. Laikipia 58,141 (19.0%) 40. Garissa 7,694 (1.9%)
17. Makueni 57,435 (9.8%) 41. Samburu 6,686 (4.6%)
18. Embu 56,082 (14.2%) 42. Mandera 6,220 (1.8%)
19. Trans Nzoia 45,228 (8.7%) 43. Isiolo 5,653 (4.2%)
20. Kitui 40,663 (6.5%) 44. Wajir 5,003 (1.5%)
21. Kericho 38,497 (7.6%) 45. Lamu 4,692 (5.6%)
22. Siaya 38,313 (7.1%) 46. Tana River 3,440 (2.3%)
23. Nandi 38,243 (7.8%) 47. Marsabit 2,953 ( 1.3%)
24. Taita Taveta 34,478 (16.2%)

&lt;/pre&gt;
&lt;p&gt;First, I‚Äôll get rid of the first three lines.&lt;/p&gt;
&lt;p&gt;You need to put two backslashes before the &lt;code&gt;&#34;\\|&#34;&lt;/code&gt; to mark it as a literal &lt;code&gt;|&lt;/code&gt;, since &lt;code&gt;|&lt;/code&gt; has a special meaning in regular expressions (it means ‚Äúor‚Äù). This is called &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;Include special characters like &#34; inside of a string by prefacing them with a backslash.&#39; href=&#39;https://psyteachr.github.io/glossary/e#escape&#39;&gt;escaping&lt;/a&gt; the character. The combination &lt;code&gt;&#34;\n&#34;&lt;/code&gt; represents a line break.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trimmed &amp;lt;- gsub(&amp;quot;rs\nCOUNTY VACCINES AL \\|\n\n&amp;quot;, &amp;quot;&amp;quot;, imgtext)

trimmed&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;1. Nairobi 957,147 (31.4%) 25. Homa Bay 33,290 (5.5%)\n2. Kiambu 298,723 (18.4%) 26. Migori 32,670 (5.9%)\n3. Nakuru 170,684 (13.4%) 27. Kilifi 31,611 (4.0%)\n4. Nyeri 134,166 (26.3%) 28. Kisii 30,204 (4.3%)\n5. Murang‚Äôa 110,825 (16.4%) 29. Nyamira 29,142 (8.5%)\n6. Machakos 100,671 (11.1%) 30. Busia 26,792 (5.8%)\n7. Uasin Gishu 92,142 (13.3%) 31. Vihiga 25,172 (7.6%)\n8. Kisumu 90,495 (13.8%) 32. Tharaka Nithi 24,386 (9.9%)\n9. Mombasa 82,814 (10.3%) 33. Baringo 21,176 (6.2%)\n10. Kirinyaga 81,233 (19.6%) 34. Bomet 20,885 (4.5%)\nll. Kajiado 75,960 (11.5%) 35. Elgeyo Marakwet 17,574 (7.2%)\n12. Bungoma 66,688 (7.9%) 36. Kwale 17,185 (3.8%)\n13. Meru 66,270 (7.0%) 37. Narok 15,410 (2.8%)\n14. Kakamega 62,043 (6.3%) 38. Turkana 9,249 (2.0%)\n15. Nyandarua 60,574 (16.1%) 39. West Pokot 8,207 (2.9%)\n16. Laikipia 58,141 (19.0%) 40. Garissa 7,694 (1.9%)\n17. Makueni 57,435 (9.8%) 41. Samburu 6,686 (4.6%)\n18. Embu 56,082 (14.2%) 42. Mandera 6,220 (1.8%)\n19. Trans Nzoia 45,228 (8.7%) 43. Isiolo 5,653 (4.2%)\n20. Kitui 40,663 (6.5%) 44. Wajir 5,003 (1.5%)\n21. Kericho 38,497 (7.6%) 45. Lamu 4,692 (5.6%)\n22. Siaya 38,313 (7.1%) 46. Tana River 3,440 (2.3%)\n23. Nandi 38,243 (7.8%) 47. Marsabit 2,953 ( 1.3%)\n24. Taita Taveta 34,478 (16.2%)\n&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;split-into-rows&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Split into rows&lt;/h3&gt;
&lt;p&gt;Since there are two rows of data on each row, I‚Äôll convert all of the line breaks (&lt;code&gt;&#34;\n&#34;&lt;/code&gt;) into spaces and then split the result wherever there is 0 or 1 spaces (&lt;code&gt;&#34; ?&#34;&lt;/code&gt;), followed by 1 or more digits (&lt;code&gt;&#34;[0-9]+&#34;&lt;/code&gt;), followed by a full stop and a space (&lt;code&gt;&#34;\\. &#34;&lt;/code&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;split_base &amp;lt;- gsub(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;, trimmed) %&amp;gt;%
  strsplit(&amp;quot; ?[0-9]+\\. &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;If you prefer &lt;code&gt;stringr&lt;/code&gt; functions to base functions, you can do it this way:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;split_stringr &amp;lt;- trimmed %&amp;gt;%
  stringr::str_replace(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;) %&amp;gt;%
  stringr::str_split(&amp;quot; ?s[0-9]+\\. &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;fix-encoding-errors&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Fix encoding errors&lt;/h3&gt;
&lt;p&gt;Make sure you look through all of your data at this point. The first time I did this, I didn‚Äôt notice that &lt;code&gt;11.&lt;/code&gt; got read in as &lt;code&gt;ll.&lt;/code&gt;, so line 21 didn‚Äôt split.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;split_base[[1]][21]&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;quot;Bomet 20,885 (4.5%) ll. Kajiado 75,960 (11.5%)&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can fix that by replacing &lt;code&gt;&#34;ll. &#34;&lt;/code&gt; with &lt;code&gt;&#34;11. &#34;&lt;/code&gt; before you split the data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;split_base &amp;lt;- trimmed %&amp;gt;%
  gsub(&amp;quot;ll. &amp;quot;, &amp;quot;11. &amp;quot;, .) %&amp;gt;%
  gsub(&amp;quot;\n&amp;quot;, &amp;quot; &amp;quot;, .) %&amp;gt;%
  strsplit(&amp;quot; ?[0-9]+\\. &amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;tabular-format&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Tabular format&lt;/h3&gt;
&lt;p&gt;Now we need to get this into a tabular format. The objects &lt;code&gt;split_base&lt;/code&gt; and &lt;code&gt;split_stringr&lt;/code&gt; are 1-item &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;A container data type that allows items with different data types to be grouped together.&#39; href=&#39;https://psyteachr.github.io/glossary/l#list&#39;&gt;lists&lt;/a&gt; where the first item contains the &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;A type of data structure that collects values with the same data type, like T/F values, numbers, or strings.&#39; href=&#39;https://psyteachr.github.io/glossary/v#vector&#39;&gt;vector&lt;/a&gt; of our rows. The first row is blank (the content before the first split at &lt;code&gt;1.&lt;/code&gt;) so we have to omit that. The code below creates a data frame.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data1 &amp;lt;- data.frame(x = split_base[[1]][-1]) &lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
x
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi 957,147 (31.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay 33,290 (5.5%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu 298,723 (18.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori 32,670 (5.9%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru 170,684 (13.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi 31,611 (4.0%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;seaparate-columns&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Seaparate columns&lt;/h3&gt;
&lt;p&gt;Now we have to separate the columns out. There are several ways to do this. Using &lt;code&gt;gsub()&lt;/code&gt; to create new columns by replacing parts of the original column is a straightforward way (HT &lt;a href=&#34;https://twitter.com/_TanHo&#34;&gt;Tan Ho&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Create the &lt;code&gt;county&lt;/code&gt; column by replacing all characters from the space before the first digit (&lt;code&gt;[0-9]&lt;/code&gt;) plus any characters after that (&lt;code&gt;.*&lt;/code&gt;) until the end of the string (&lt;code&gt;$&lt;/code&gt;). Create the &lt;code&gt;number&lt;/code&gt; column by replacing from the start of the string (&lt;code&gt;^&lt;/code&gt;) plus any non-numbers (&lt;code&gt;[^0-9]+&lt;/code&gt;) that follow it.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data2 &amp;lt;- data1 %&amp;gt;%
  mutate(county = gsub(&amp;quot; [0-9].*$&amp;quot;, &amp;quot;&amp;quot;, x),
         number = gsub(&amp;quot;^[^0-9]+&amp;quot;, &amp;quot;&amp;quot;, x))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
x
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
county
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
number
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi 957,147 (31.4%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
957,147 (31.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay 33,290 (5.5%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
33,290 (5.5%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu 298,723 (18.4%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
298,723 (18.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori 32,670 (5.9%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
32,670 (5.9%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru 170,684 (13.4%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
170,684 (13.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi 31,611 (4.0%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
31,611 (4.0%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;The &lt;code&gt;county&lt;/code&gt; column looks fine, but the &lt;code&gt;number&lt;/code&gt; column needs to be split into the number of vaccinations and the percent. Use the &lt;code&gt;separate()&lt;/code&gt; function to split this column on the left parenthesis (remember to escape the parenthesis).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data3 &amp;lt;- data2 %&amp;gt;%
  separate(col = number, 
           into = c(&amp;quot;number&amp;quot;, &amp;quot;percent&amp;quot;), 
           sep = &amp;quot;\\(&amp;quot;,
           extra = &amp;quot;drop&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
x
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
county
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
number
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
percent
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi 957,147 (31.4%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
957,147
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
31.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay 33,290 (5.5%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
33,290
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
5.5%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu 298,723 (18.4%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
298,723
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
18.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori 32,670 (5.9%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
32,670
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
5.9%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru 170,684 (13.4%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
170,684
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
13.4%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi 31,611 (4.0%)
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
31,611
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
4.0%)
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;clean-up-the-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Clean up the data&lt;/h3&gt;
&lt;p&gt;Now we just need to clean up some extra characters in the &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;percent&lt;/code&gt; columns. Get rid of the comma in the &lt;code&gt;number&lt;/code&gt; column and the &lt;code&gt;&#34;%\\)&#34;&lt;/code&gt; in the &lt;code&gt;percent&lt;/code&gt; column (remember to escape the parenthesis).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data4 &amp;lt;- data3 %&amp;gt;%
  mutate(number = gsub(&amp;quot;,&amp;quot;, &amp;quot;&amp;quot;, number),
         percent = gsub(&amp;quot;%\\)&amp;quot;, &amp;quot;&amp;quot;, percent)) %&amp;gt;%
  select(-x)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
county
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
number
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
percent
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
957147
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
31.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
33290
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
5.5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
298723
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
18.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
32670
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
5.9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
170684
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
13.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
31611
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
4.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;check-data-types&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Check data types&lt;/h3&gt;
&lt;p&gt;This looks good, but there is still a problem. We can‚Äôt do anything useful with this data set because the &lt;code&gt;number&lt;/code&gt; and &lt;code&gt;percent&lt;/code&gt; columns are actually still character &lt;code&gt;r glossary(&#34;data type&#34;, &#34;data types&#34;)&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;summary(data4)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##     county             number            percent         
##  Length:47          Length:47          Length:47         
##  Class :character   Class :character   Class :character  
##  Mode  :character   Mode  :character   Mode  :character&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;m &amp;lt;- mean(data4$number)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in mean.default(data4$number): argument is not numeric or logical:
## returning NA&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Convert the &lt;code&gt;number&lt;/code&gt; column to an &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;A data type representing whole numbers.&#39; href=&#39;https://psyteachr.github.io/glossary/i#integer&#39;&gt;integer&lt;/a&gt; and the &lt;code&gt;percent&lt;/code&gt; column to a &lt;a class=&#39;glossary&#39; target=&#39;_blank&#39; title=&#39;A data type representing a real decimal number&#39; href=&#39;https://psyteachr.github.io/glossary/d#double&#39;&gt;double&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;data &amp;lt;- data4 %&amp;gt;%
  mutate(number = as.integer(number),
         percent = as.double(percent))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;width: auto !important; margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
county
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
number
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
percent
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nairobi
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
957147
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Homa Bay
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
33290
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kiambu
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
298723
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Migori
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
32670
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5.9
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Nakuru
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
170684
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
13.4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Kilifi
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31611
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now you‚Äôre ready to plot the data or use it in analyses.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(data, aes(x = number, y = percent)) +
  geom_point(color = &amp;quot;dodgerblue&amp;quot;) +
  scale_x_continuous(&amp;quot;Number of Vaccinated People&amp;quot;,
                     breaks = seq(0, 1e6, 2e5),
                     labels = c(paste0(seq(0, 800, 200), &amp;quot;K&amp;quot;), &amp;quot;1M&amp;quot;),
                     limits = c(0, 1e6)) +
  scale_y_continuous(&amp;quot;Percent of County&amp;quot;,
                     breaks = seq(0, 40, 10),
                     labels = paste0(seq(0, 40, 10), &amp;quot;%&amp;quot;)) +
  theme_bw()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://debruine.github.io/post/data-from-images/index_files/figure-html/unnamed-chunk-19-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;glossary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Glossary&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
term
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
definition
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/c.html#character&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;character&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A data type representing strings of text.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/d.html#double&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;double&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A data type representing a real decimal number
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/e.html#escape&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;escape&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Include special characters like &#34; inside of a string by prefacing them with a backslash.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/i.html#integer&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;integer&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A data type representing whole numbers.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/l.html#list&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;list&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A container data type that allows items with different data types to be grouped together.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/t.html#tabular-data&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;tabular data&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Data in a rectangular table format, where each row has an entry for each column.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
&lt;a href=&#34;https://psyteachr.github.io/glossary/v.html#vector&#34; class=&#34;glossary&#34; target=&#34;_blank&#34;&gt;vector&lt;/a&gt;
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
A type of data structure that collects values with the same data type, like T/F values, numbers, or strings.
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Experimentum Data Wrangling Demo</title>
      <link>https://debruine.github.io/post/experimentum-data/</link>
      <pubDate>Wed, 20 Jan 2021 00:00:00 +0000</pubDate>
      <guid>https://debruine.github.io/post/experimentum-data/</guid>
      <description>
&lt;script src=&#34;https://debruine.github.io/rmarkdown-libs/header-attrs/header-attrs.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;https://debruine.github.io/rmarkdown-libs/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://debruine.github.io/rmarkdown-libs/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;


&lt;p&gt;(updated 2021-01-21)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/debruine/experimentum&#34;&gt;Experimentum&lt;/a&gt; studies require that you download data from questionnaires and experiments separately, since the data have different formats. You can &lt;a href=&#34;https://exp.psy.gla.ac.uk/project?demodata&amp;amp;autond&#34; target=&#34;_blank&#34;&gt;participate anonymously in the demo study&lt;/a&gt; (the median completion time is 3.8 minutes). The links below update dynamically, so your data will be available immediately.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://exp.psy.gla.ac.uk/include/scripts/public_download?id=520&amp;amp;download=exp&#34; target=&#34;_blank&#34;&gt;questionnaire data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://exp.psy.gla.ac.uk/include/scripts/public_download?id=520&amp;amp;download=quest&#34; target=&#34;_blank&#34;&gt;experiment data&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;data/project_520_structure.json&#34;&gt;project structure&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The project structure file above is a JSON-formatted file that contains all of the information needed to run a study in Experimentum. In future versions of Experimentum, you will be able to directly edit this file, for example translating the questions into another language, and set up a study by simply uploading the file.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;proj &amp;lt;- jsonlite::read_json(&amp;quot;data/project_520_structure.json&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;questionnaire-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Questionnaire Data&lt;/h2&gt;
&lt;p&gt;The study has two questionnaires: &lt;strong&gt;Groups&lt;/strong&gt;, a few questions you can use to divide the participants into groups of varying sizes, and &lt;strong&gt;BMIS&lt;/strong&gt;, the &lt;a href=&#34;https://mypages.unh.edu/jdmayer/brief-mood-introspection-scale-bmis&#34;&gt;Brief Mood Introspection Scale&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;load-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Load Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quest_data &amp;lt;- read_csv(&amp;quot;data/Demo-Data-quests_2021-01-21.csv&amp;quot;)

glimpse(quest_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 2,807
## Columns: 14
## $ session_id  &amp;lt;dbl&amp;gt; 60481, 60481, 60481, 60481, 60481, 60481, 60481, 60481, 60‚Ä¶
## $ project_id  &amp;lt;dbl&amp;gt; 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520‚Ä¶
## $ quest_name  &amp;lt;chr&amp;gt; &amp;quot;Groups&amp;quot;, &amp;quot;Groups&amp;quot;, &amp;quot;Groups&amp;quot;, &amp;quot;Groups&amp;quot;, &amp;quot;Groups&amp;quot;, &amp;quot;Groups&amp;quot;‚Ä¶
## $ quest_id    &amp;lt;dbl&amp;gt; 2921, 2921, 2921, 2921, 2921, 2921, 2921, 2920, 2920, 2920‚Ä¶
## $ user_id     &amp;lt;dbl&amp;gt; 43533, 43533, 43533, 43533, 43533, 43533, 43533, 43533, 43‚Ä¶
## $ user_sex    &amp;lt;chr&amp;gt; &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;‚Ä¶
## $ user_status &amp;lt;chr&amp;gt; &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;r‚Ä¶
## $ user_age    &amp;lt;dbl&amp;gt; 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6‚Ä¶
## $ q_name      &amp;lt;chr&amp;gt; &amp;quot;fiber_arts&amp;quot;, &amp;quot;native_english&amp;quot;, &amp;quot;hats&amp;quot;, &amp;quot;pets&amp;quot;, &amp;quot;colour&amp;quot;, ‚Ä¶
## $ q_id        &amp;lt;dbl&amp;gt; 92833810, 92833809, 92833814, 92833811, 92833813, 92833815‚Ä¶
## $ order       &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12‚Ä¶
## $ dv          &amp;lt;chr&amp;gt; &amp;quot;1&amp;quot;, &amp;quot;0&amp;quot;, &amp;quot;5&amp;quot;, &amp;quot;Yes&amp;quot;, &amp;quot;Red&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;today&amp;quot;, &amp;quot;2&amp;quot;, &amp;quot;1&amp;quot;, &amp;quot;2&amp;quot;, ‚Ä¶
## $ starttime   &amp;lt;dttm&amp;gt; 2021-01-19 17:48:15, 2021-01-19 17:48:15, 2021-01-19 17:4‚Ä¶
## $ endtime     &amp;lt;dttm&amp;gt; 2021-01-19 17:48:31, 2021-01-19 17:48:31, 2021-01-19 17:4‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;session_id&lt;/code&gt; a unique ID generated each time someone starts a study&lt;/li&gt;
&lt;li&gt;&lt;code&gt;project_id&lt;/code&gt; a unique ID for this study&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quest_name&lt;/code&gt; the name of each questionnaire (not guaranteed to be unique)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;quest_id&lt;/code&gt; uniquely identifies each questionnaire&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user_id&lt;/code&gt; registered participants have a unique ID that is the same across logins, while guest participants get a new ID each time they log in&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user_sex&lt;/code&gt; gender from the options ‚Äúmale‚Äù, ‚Äúfemale‚Äù, ‚Äúnonbinary‚Äù, ‚Äúna‚Äù (specifically chose not to answer), or &lt;code&gt;NA&lt;/code&gt; (did not complete the question)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user_status&lt;/code&gt; whether use is a researcher (‚Äúadmin‚Äù, ‚Äúsuper‚Äù, ‚Äúres‚Äù, ‚Äústudent‚Äù), a ‚Äúregistered‚Äù user, a ‚Äúguest‚Äù user, or ‚Äútest‚Äù&lt;/li&gt;
&lt;li&gt;&lt;code&gt;user_age&lt;/code&gt; the user‚Äôs age; registered accounts are asked for their birthdate, and their age is calculated to the nearest 0.1 years; guest users may be asked their age in years&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q_name&lt;/code&gt; name of the question&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q_id&lt;/code&gt; uniquely identifies each question&lt;/li&gt;
&lt;li&gt;&lt;code&gt;order&lt;/code&gt; the order the question was presented in (not necessarily answered in) or questionnaires with randomised order&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dv&lt;/code&gt; the response&lt;/li&gt;
&lt;li&gt;&lt;code&gt;starttime&lt;/code&gt; the time that the questionnaire was started&lt;/li&gt;
&lt;li&gt;&lt;code&gt;endtime&lt;/code&gt; the time that the questionnaire was submitted&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;removing-duplicate-answers&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Removing duplicate answers&lt;/h3&gt;
&lt;p&gt;Although Experimentum tries to prevent people accidentally using the back button during a study, there are some ways around this, so sometimes a person will submit the same questionnaire twice in a row. You can filter your data down to only the first time each person completed each question with the following code (do not use this if your study actually gives people the same questionnaire more than once).&lt;/p&gt;
&lt;p&gt;The questions are recorded in the order that they were answered, so we can just group by participant (&lt;code&gt;user_id&lt;/code&gt;) and question (&lt;code&gt;q_id&lt;/code&gt;) and choose the first answer. If you have a longitudinal study, group by &lt;code&gt;session_id&lt;/code&gt; to allow multiple sessions per user.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;quest_distinct &amp;lt;- quest_data %&amp;gt;%
  group_by(user_id, q_id) %&amp;gt;% # or add session_id 
  # chooses the first time each user answered each question
  filter(row_number() == 1) %&amp;gt;%
  ungroup()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Check how many duplicate rows were excluded.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;setdiff(quest_data, quest_distinct) %&amp;gt;% nrow()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] 0&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;groups&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Groups&lt;/h3&gt;
&lt;p&gt;Here, we select just the data from the Groups questionnaire and keep only the session_id, user_id, q_name, and dv columns, and convert the data to wide format. If you restricted your data to only one session per user, as above, then &lt;code&gt;user_id&lt;/code&gt; and &lt;code&gt;session_id&lt;/code&gt; are redundant. The code below works for both types of data, though.&lt;/p&gt;
&lt;p&gt;If the &lt;code&gt;dv&lt;/code&gt; column contains both numeric and character data, the new columns will all be characters, so add &lt;code&gt;convert = TRUE&lt;/code&gt; if you are using &lt;code&gt;spread()&lt;/code&gt;. If you use the &lt;code&gt;pivot_wider()&lt;/code&gt; function, it doesn‚Äôt have a &lt;code&gt;convert&lt;/code&gt; argument, so you have to pipe the data frame to a separate function, &lt;code&gt;type.convert()&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;groups &amp;lt;- quest_distinct %&amp;gt;%
  filter(quest_name == &amp;quot;Groups&amp;quot;) %&amp;gt;%
  select(session_id, user_id, q_name, dv) %&amp;gt;%
  spread(q_name, dv, convert = TRUE)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
session_id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
user_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
colour
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
exercise
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
fiber_arts
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
hats
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
native_english
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
pets
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
spiders
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Red
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60495
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31625
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Green
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60509
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53422
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
black
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
more
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60550
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53458
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
purplE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60552
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53460
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
green
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60553
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53461
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Blue
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;questionnaire-options&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Questionnaire options&lt;/h3&gt;
&lt;p&gt;I usually recommend recording the actual text chosen from drop-down menus, rather than integers that you will have to remember how you mapped onto the answers. If you need to check how you set up the coding, you can look at the info page on Experimentum or check the project json file that we loaded above. It‚Äôs a nested list and contains all the info, but can be a little tricky to parse (I‚Äôll work on making an R package to make this easier in the future).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# get question names, text and type, plus options if select
qs &amp;lt;- proj$quest_2921$question %&amp;gt;%
  map(~{
    x &amp;lt;- .x[c(&amp;quot;name&amp;quot;, &amp;quot;question&amp;quot;, &amp;quot;type&amp;quot;)]
    if (!is.null(.x$options)) {
      x$options &amp;lt;- sapply(.x$options, `[[`, &amp;quot;display&amp;quot;)
      names(x$options) &amp;lt;- sapply(.x$options, `[[`, &amp;quot;opt_value&amp;quot;)
    }
    x
  })&lt;/code&gt;&lt;/pre&gt;
&lt;ol style=&#34;list-style-type: decimal&#34;&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: native_english&lt;/li&gt;
&lt;li&gt;question: Is English your native language?&lt;/li&gt;
&lt;li&gt;type: select&lt;/li&gt;
&lt;li&gt;options:
&lt;ul&gt;
&lt;li&gt;1: Yes&lt;/li&gt;
&lt;li&gt;0: No&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: fiber_arts&lt;/li&gt;
&lt;li&gt;question: Do you know how to knit or crochet?&lt;/li&gt;
&lt;li&gt;type: select&lt;/li&gt;
&lt;li&gt;options:
&lt;ul&gt;
&lt;li&gt;1: Yes&lt;/li&gt;
&lt;li&gt;0: No&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: pets&lt;/li&gt;
&lt;li&gt;question: Do you have a pet?&lt;/li&gt;
&lt;li&gt;type: select&lt;/li&gt;
&lt;li&gt;options:
&lt;ul&gt;
&lt;li&gt;Yes: Yes&lt;/li&gt;
&lt;li&gt;No: No&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: exercise&lt;/li&gt;
&lt;li&gt;question: When was the last time you exercised?&lt;/li&gt;
&lt;li&gt;type: select&lt;/li&gt;
&lt;li&gt;options:
&lt;ul&gt;
&lt;li&gt;today: today or yesterday&lt;/li&gt;
&lt;li&gt;week: in the past week&lt;/li&gt;
&lt;li&gt;more: more than a week ago&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: colour&lt;/li&gt;
&lt;li&gt;question: What is your favourite colour?&lt;/li&gt;
&lt;li&gt;type: text&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: hats&lt;/li&gt;
&lt;li&gt;question: How many hats do you own (approximately)?&lt;/li&gt;
&lt;li&gt;type: selectnum&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;ul&gt;
&lt;li&gt;name: spiders&lt;/li&gt;
&lt;li&gt;question: Are you afraid of spiders?&lt;/li&gt;
&lt;li&gt;type: radioanchor&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;plots-and-tables&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Plots and tables&lt;/h4&gt;
&lt;p&gt;Plot your data or create summary tables to help you spot any problems. The &lt;code&gt;count()&lt;/code&gt; function is useful for variables with a small number of options.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# count a single column
count(groups, exercise)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
exercise
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
more
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
24
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
69
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
week
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# count multiple columns
count(groups, fiber_arts, native_english, pets)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
fiber_arts
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
native_english
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
pets
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
10
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
20
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
18
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
39
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Histograms or density plots are best for columns with many continuous values.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(groups, aes(hats)) +
  geom_histogram(binwidth = 1, 
                 fill = &amp;quot;dodgerblue&amp;quot;,
                 color = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://debruine.github.io/post/demodata_files/figure-html/hats-plot-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(groups, aes(spiders)) +
  geom_histogram(binwidth = 1, 
                 fill = &amp;quot;violetred&amp;quot;,
                 color = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://debruine.github.io/post/demodata_files/figure-html/spiders-plot-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;recode-variables&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Recode variables&lt;/h4&gt;
&lt;p&gt;You might want to do some recoding of variables here. The &lt;code&gt;pets&lt;/code&gt; column contains the words ‚ÄúYes‚Äù and ‚ÄúNo‚Äù; maybe you want to code this as 1s and 0s.The column &lt;code&gt;fiber_arts&lt;/code&gt; has a 1 if a person knows how to knit or crochet, and a 0 if they don‚Äôt. You might want to change this to the words ‚ÄúYes‚Äù and ‚ÄúNo‚Äù. The &lt;code&gt;recode()&lt;/code&gt; function is useful for this. I like to give the binary-coded version of a variable the suffix ‚Äú.b‚Äù.&lt;/p&gt;
&lt;p&gt;Note that in the &lt;code&gt;recode()&lt;/code&gt; function, numbers that are on the left side of an equal sign need to be in quotes. This just has to do with the way R treats argument names and doesn‚Äôt mean that the recoded column has to be a character type.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;groups_coded &amp;lt;- groups %&amp;gt;%
  mutate(
    pets.b = recode(pets, &amp;quot;Yes&amp;quot; = 1, &amp;quot;No&amp;quot; = 0),
    fiber_arts.b = fiber_arts,
    fiber_arts = recode(fiber_arts, &amp;quot;1&amp;quot; = &amp;quot;Yes&amp;quot;, &amp;quot;0&amp;quot; = &amp;quot;No&amp;quot;)
  )&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
session_id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
user_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
colour
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
exercise
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
fiber_arts
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
hats
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
native_english
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
pets
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
spiders
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
pets.b
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
fiber_arts.b
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Red
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60495
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31625
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Green
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60509
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53422
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
black
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
more
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60550
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53458
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
purplE
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60552
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53460
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
green
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60553
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53461
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Blue
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
today
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
No
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
5
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Yes
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;free-text&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Free text&lt;/h4&gt;
&lt;p&gt;If you have any free-text responses, you will probably need to code them. I always start by looking at all of the possible values after transforming the value to lowercase and getting rid of spaces around the text.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;colours &amp;lt;- groups_coded %&amp;gt;%
  mutate(colour = tolower(colour) %&amp;gt;% trimws()) %&amp;gt;%
  count(colour) %&amp;gt;%
  arrange(n, colour) %&amp;gt;%
  group_by(n) %&amp;gt;%
  summarise(colours = paste(colour, collapse = &amp;quot;, &amp;quot;),
            .groups = &amp;quot;drop&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
colours
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
amber, cornflower, grey, indian orange, magenta, monochrome grey/white tones, petroleum blue, teal, violet, white, yes.
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pink, turquoise
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
6
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
orange
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
7
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
black
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
8
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
yellow
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
12
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
red
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
17
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
purple
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
green
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
29
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
blue
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You can then decide to recode some colours to fix misspellings, etc. One tricky part of using &lt;code&gt;recode()&lt;/code&gt; is that all replaced values have to be the same data type, so use &lt;code&gt;NA_character_&lt;/code&gt; if you are replacing values with strings, &lt;code&gt;NA_real_&lt;/code&gt; for doubles, and &lt;code&gt;NA_integer_&lt;/code&gt; for integers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;groups_colours &amp;lt;- groups_coded %&amp;gt;%
  mutate(colour = tolower(colour) %&amp;gt;% trimws()) %&amp;gt;%
  mutate(colours_fixed = recode(colour,
                                &amp;quot;amber&amp;quot; = &amp;quot;yellow&amp;quot;, 
                                &amp;quot;yes.&amp;quot; = NA_character_,
                                &amp;quot;violet&amp;quot; = &amp;quot;purple&amp;quot;,
                                &amp;quot;petroleum blue&amp;quot; = &amp;quot;blue&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;bmis&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;BMIS&lt;/h3&gt;
&lt;p&gt;The second questionnaire is the Brief Mood Introspection Scale (BMIS). The BMIS has 16 questions divided into positive and negative adjectives. The question names are all in the format &lt;code&gt;valence_adjective&lt;/code&gt;, so you can easily separate the question name into two columns.&lt;/p&gt;
&lt;p&gt;Because the original &lt;code&gt;quest_data&lt;/code&gt; had both character and numeric values in the &lt;code&gt;dv&lt;/code&gt; column, it is still a character type even now that the dv column only contains numbers. You can fix this using the &lt;code&gt;type_convert()&lt;/code&gt; function. Set col_types manually or use &lt;code&gt;cols()&lt;/code&gt; to automatically guess.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bmis_raw &amp;lt;- quest_distinct %&amp;gt;%
  filter(quest_name == &amp;quot;BMIS&amp;quot;) %&amp;gt;%
  select(session_id, user_id, q_name, dv) %&amp;gt;%
  separate(q_name, c(&amp;quot;valence&amp;quot;, &amp;quot;adjective&amp;quot;)) %&amp;gt;%
  type_convert(col_types = cols())&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
session_id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
user_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
valence
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
adjective
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dv
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
nervous
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pos
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
caring
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pos
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
peppy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
tired
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
grouchy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
sad
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;div id=&#34;summary-scores&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Summary scores&lt;/h4&gt;
&lt;p&gt;The BMIS is coded as the sum of the forward-coded scores for all the positive adjectives and the reverse-coded scores for all negative adjectives. Experimentum has a function to reverse code selected items in the ‚Äúradiopage‚Äù questionnaire type, but we didn‚Äôt do that here so you can see how to manually recode. The scores are 1 to 4, so subjtract them from 5 to get the reverse-coded value. Make sure to look at a few of your recoded values to make sure it‚Äôs doing what you expect.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bmis_coded &amp;lt;- bmis_raw %&amp;gt;%
  mutate(recoded_dv = case_when(
    valence == &amp;quot;pos&amp;quot; ~ dv,
    valence == &amp;quot;neg&amp;quot; ~ 5 - dv
  ))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
session_id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
user_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
valence
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
adjective
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
dv
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
recoded_dv
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
nervous
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pos
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
caring
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pos
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
peppy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
tired
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
grouchy
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
4
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
neg
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
sad
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
3
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
2
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Create the summary score by grouping by user_id and session_id and summing the responses. We use &lt;code&gt;sum()&lt;/code&gt; here because the BMIS is not valid if people skipped any questions, so we want the result to be &lt;code&gt;NA&lt;/code&gt; if they did. Some questionnaire scoring allows you to calculate an average score omitting missed questions, so you could use &lt;code&gt;mean(recoded_dv, na.rm = TRUE)&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;bmis &amp;lt;- bmis_coded %&amp;gt;%
  group_by(session_id, user_id) %&amp;gt;%
  summarise(bmis = sum(recoded_dv),
            .groups = &amp;quot;drop&amp;quot;) &lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;plots&#34; class=&#34;section level4&#34;&gt;
&lt;h4&gt;Plots&lt;/h4&gt;
&lt;p&gt;Always plot your summary scores. This helps you to double-check your logic and identify outliers.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(bmis, aes(bmis)) + 
  geom_histogram(binwidth = 1, 
                 fill = &amp;quot;dodgerblue&amp;quot;,
                 color = &amp;quot;white&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://debruine.github.io/post/demodata_files/figure-html/bmis-hist-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;user-demographics&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;User Demographics&lt;/h3&gt;
&lt;p&gt;Experimentum data always contains user demographic data, which is collected when the user signs up for a registered account or logs in as a guest. This study did not ask users for their age or sex, so that info is only available from registered users.&lt;/p&gt;
&lt;p&gt;First, we select the session_id and all of the user variables, then make sure we have only one row for each participant.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;user &amp;lt;- quest_distinct %&amp;gt;%
  select(session_id, starts_with(&amp;quot;user_&amp;quot;)) %&amp;gt;%
  distinct()&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
session_id
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
user_id
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
user_sex
&lt;/th&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
user_status
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
user_age
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60481
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
43533
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
female
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
res
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
26.6
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60495
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
31625
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
female
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
student
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
22.1
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60509
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53422
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
female
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
guest
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
61.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60550
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53458
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
guest
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60552
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53460
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
guest
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
60553
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
53461
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
NA
&lt;/td&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
guest
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
0.0
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;rejoining&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Rejoining&lt;/h3&gt;
&lt;p&gt;Now you can rejoin your questionnaire data. Start with the user table and only join on matching data from the individual questionnaires. Use &lt;code&gt;session_id&lt;/code&gt; and &lt;code&gt;user_id&lt;/code&gt; to join.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;q_data &amp;lt;- user %&amp;gt;%
  left_join(bmis, by = c(&amp;quot;session_id&amp;quot;, &amp;quot;user_id&amp;quot;)) %&amp;gt;%
  left_join(groups_colours, by = c(&amp;quot;session_id&amp;quot;, &amp;quot;user_id&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;exclusions&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Exclusions&lt;/h3&gt;
&lt;p&gt;You will usually want to exclude participants with user_status that are not ‚Äúregistered‚Äù or ‚Äúguest‚Äù. Statuses ‚Äúadmin‚Äù, ‚Äúsuper‚Äù, ‚Äúres‚Äù, and ‚Äústudent‚Äù refer to different types of researchers (with different privileges on the Experimentum platform). The status ‚Äútest‚Äù is for test runs with different user demographics. You can also apply other exclusion criteria here like age restrictions or requiring that summary score not be missing.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;q_data_excl &amp;lt;- q_data %&amp;gt;%
  filter(user_status %in% c(&amp;quot;guest&amp;quot;, &amp;quot;registered&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
user_status
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
guest
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
121
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;experiment-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Experiment Data&lt;/h2&gt;
&lt;p&gt;Our study has one rating experiment with two between-subject conditions: cuteness ratings and appropriateness as pet ratings.&lt;/p&gt;
&lt;div id=&#34;load-data-1&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Load Data&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp_data &amp;lt;- read_csv(&amp;quot;data/Demo-Data-exps_2021-01-21.csv&amp;quot;)

glimpse(exp_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1,476
## Columns: 15
## $ session_id  &amp;lt;dbl&amp;gt; 60481, 60481, 60481, 60481, 60481, 60481, 60481, 60481, 60‚Ä¶
## $ project_id  &amp;lt;dbl&amp;gt; 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520‚Ä¶
## $ exp_name    &amp;lt;chr&amp;gt; &amp;quot;Animals: Cuteness&amp;quot;, &amp;quot;Animals: Cuteness&amp;quot;, &amp;quot;Animals: Cutene‚Ä¶
## $ exp_id      &amp;lt;dbl&amp;gt; 707, 707, 707, 707, 707, 707, 707, 707, 707, 707, 707, 707‚Ä¶
## $ user_id     &amp;lt;dbl&amp;gt; 43533, 43533, 43533, 43533, 43533, 43533, 43533, 43533, 43‚Ä¶
## $ user_sex    &amp;lt;chr&amp;gt; &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;‚Ä¶
## $ user_status &amp;lt;chr&amp;gt; &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;r‚Ä¶
## $ user_age    &amp;lt;dbl&amp;gt; 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6‚Ä¶
## $ trial_name  &amp;lt;chr&amp;gt; &amp;quot;animal-967657_640&amp;quot;, &amp;quot;surprised-3786845_640&amp;quot;, &amp;quot;penguins-42‚Ä¶
## $ trial_n     &amp;lt;dbl&amp;gt; 2, 12, 9, 3, 8, 10, 5, 6, 7, 11, 4, 1, 4, 10, 7, 11, 12, 9‚Ä¶
## $ order       &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7‚Ä¶
## $ dv          &amp;lt;dbl&amp;gt; 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 7, 7, 3, 4, 2, 7, 4‚Ä¶
## $ rt          &amp;lt;dbl&amp;gt; 1756, 1103, 842, 735, 755, 845, 878, 842, 812, 1421, 1003,‚Ä¶
## $ side        &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1‚Ä¶
## $ dt          &amp;lt;dttm&amp;gt; 2021-01-19 17:48:35, 2021-01-19 17:48:36, 2021-01-19 17:4‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Experiment data have the same session and user columns as questionnaire data, plus columns for the experiment name (&lt;code&gt;exp_name&lt;/code&gt;) and unique id (&lt;code&gt;exp_id&lt;/code&gt;). The remaining columns give data specific to each trial:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;trial_name&lt;/code&gt; not necessarily unique&lt;/li&gt;
&lt;li&gt;&lt;code&gt;trial_n&lt;/code&gt; uniquely identifies each trial within an experiment&lt;/li&gt;
&lt;li&gt;&lt;code&gt;order&lt;/code&gt; (the order the trial was shown to that participant&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dv&lt;/code&gt; the response&lt;/li&gt;
&lt;li&gt;&lt;code&gt;rt&lt;/code&gt; the rough reaction time in milliseconds (web data have many sources of possible bias so do not use Experimentum to do RT experiments that require millisecond precision)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;side&lt;/code&gt; if the experiment has multiple images, the order of the images if side is set to random (not relevant here)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dt&lt;/code&gt; the timestamp of the response&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(exp_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1,476
## Columns: 15
## $ session_id  &amp;lt;dbl&amp;gt; 60481, 60481, 60481, 60481, 60481, 60481, 60481, 60481, 60‚Ä¶
## $ project_id  &amp;lt;dbl&amp;gt; 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520, 520‚Ä¶
## $ exp_name    &amp;lt;chr&amp;gt; &amp;quot;Animals: Cuteness&amp;quot;, &amp;quot;Animals: Cuteness&amp;quot;, &amp;quot;Animals: Cutene‚Ä¶
## $ exp_id      &amp;lt;dbl&amp;gt; 707, 707, 707, 707, 707, 707, 707, 707, 707, 707, 707, 707‚Ä¶
## $ user_id     &amp;lt;dbl&amp;gt; 43533, 43533, 43533, 43533, 43533, 43533, 43533, 43533, 43‚Ä¶
## $ user_sex    &amp;lt;chr&amp;gt; &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;‚Ä¶
## $ user_status &amp;lt;chr&amp;gt; &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;res&amp;quot;, &amp;quot;r‚Ä¶
## $ user_age    &amp;lt;dbl&amp;gt; 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6, 26.6‚Ä¶
## $ trial_name  &amp;lt;chr&amp;gt; &amp;quot;animal-967657_640&amp;quot;, &amp;quot;surprised-3786845_640&amp;quot;, &amp;quot;penguins-42‚Ä¶
## $ trial_n     &amp;lt;dbl&amp;gt; 2, 12, 9, 3, 8, 10, 5, 6, 7, 11, 4, 1, 4, 10, 7, 11, 12, 9‚Ä¶
## $ order       &amp;lt;dbl&amp;gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7‚Ä¶
## $ dv          &amp;lt;dbl&amp;gt; 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 1, 7, 7, 3, 4, 2, 7, 4‚Ä¶
## $ rt          &amp;lt;dbl&amp;gt; 1756, 1103, 842, 735, 755, 845, 878, 842, 812, 1421, 1003,‚Ä¶
## $ side        &amp;lt;dbl&amp;gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1‚Ä¶
## $ dt          &amp;lt;dttm&amp;gt; 2021-01-19 17:48:35, 2021-01-19 17:48:36, 2021-01-19 17:4‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Most researchers don‚Äôt want all that data, so we can select just the important columns. The exp_name contains info we don‚Äôt need, so we‚Äôll also process that.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp_selected &amp;lt;- exp_data %&amp;gt;%
  select(session_id, user_id, exp_name, trial_name, dv) %&amp;gt;%
  mutate(exp_name = sub(&amp;quot;Animals: &amp;quot;, &amp;quot;&amp;quot;, exp_name))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;count(exp_selected, exp_name)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
exp_name
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Appropriate
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
696
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
Cuteness
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
780
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;count(exp_selected, trial_name)&lt;/code&gt;&lt;/pre&gt;
&lt;table class=&#34;table&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left;&#34;&gt;
trial_name
&lt;/th&gt;
&lt;th style=&#34;text-align:right;&#34;&gt;
n
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
adorable-5059091_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
animal-967657_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
bird-349035_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
dolphin-203875_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
frog-3312038_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
hedgehog-468228_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
kitty-2948404_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
meerkat-459171_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
penguins-429134_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
pug-690566_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
spider-2313079_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left;&#34;&gt;
surprised-3786845_640
&lt;/td&gt;
&lt;td style=&#34;text-align:right;&#34;&gt;
123
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div id=&#34;adding-trial-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Adding trial data&lt;/h3&gt;
&lt;p&gt;It‚Äôs common that you need to add some data about each trial.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span style=&#34;display:block;&#34; id=&#34;fig:unnamed-chunk-20&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;cute/adorable-5059091_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/animal-967657_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/bird-349035_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/dolphin-203875_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/frog-3312038_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/hedgehog-468228_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/kitty-2948404_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/meerkat-459171_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/penguins-429134_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/pug-690566_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/spider-2313079_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;&lt;img src=&#34;cute/surprised-3786845_640.jpg&#34; alt=&#34;images from the experiment&#34; width=&#34;24%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: images from the experiment
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;You will probably have you trial information in a separate table, so you can load that here. In this case, we‚Äôll use the &lt;code&gt;tribble()&lt;/code&gt; function to create a table by rows.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;trial_info &amp;lt;- tribble(
  ~photo,                  ~name,    ~is_baby, ~mammal,
  &amp;quot;adorable-5059091_640&amp;quot;,  &amp;quot;kitten1&amp;quot;,   1,        1,
  &amp;quot;animal-967657_640&amp;quot;,     &amp;quot;fox&amp;quot;,       0,        1,
  &amp;quot;bird-349035_640&amp;quot;,       &amp;quot;chicken&amp;quot;,   1,        0,
  &amp;quot;dolphin-203875_640&amp;quot;,    &amp;quot;dolphin&amp;quot;,   0,        1,
  &amp;quot;frog-3312038_640&amp;quot;,      &amp;quot;frog&amp;quot;,      0,        0,
  &amp;quot;hedgehog-468228_640&amp;quot;,   &amp;quot;hedgehog&amp;quot;,  0,        1,
  &amp;quot;kitty-2948404_640&amp;quot;,     &amp;quot;kitten2&amp;quot;,   1,        1,
  &amp;quot;meerkat-459171_640&amp;quot;,    &amp;quot;meerkat&amp;quot;,   0,        1,
  &amp;quot;penguins-429134_640&amp;quot;,   &amp;quot;penguin&amp;quot;,   1,        0,
  &amp;quot;pug-690566_640&amp;quot;,        &amp;quot;dog&amp;quot;,       1,        1,
  &amp;quot;spider-2313079_640&amp;quot;,    &amp;quot;spider&amp;quot;,    0,        0,
  &amp;quot;surprised-3786845_640&amp;quot;, &amp;quot;squirrel&amp;quot;,  0,        1
)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then you can join it to the experiment data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;exp_full &amp;lt;- exp_selected %&amp;gt;%
  left_join(trial_info, by = c(&amp;quot;trial_name&amp;quot; = &amp;quot;photo&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;And create some plots.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;ggplot(exp_full, aes(dv, colour = exp_name)) +
  geom_freqpoly(binwidth = 1) +
  facet_wrap(~name) +
  scale_x_continuous(breaks = 1:7) +
  labs(colour = &amp;quot;Rating Type&amp;quot;, x = &amp;quot;&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;https://debruine.github.io/post/demodata_files/figure-html/unnamed-chunk-23-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;demographs-exclusions-and-rejoin&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Demographs, exclusions and rejoin&lt;/h3&gt;
&lt;p&gt;As for the questionnaire data above, you can pull out the user demographics, apply exclusions, and rejoin to the experiment data.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# user table with exclusions
user_excl &amp;lt;- exp_data %&amp;gt;%
  select(session_id, starts_with(&amp;quot;user_&amp;quot;)) %&amp;gt;%
  distinct() %&amp;gt;%
  filter(user_status %in% c(&amp;quot;guest&amp;quot;, &amp;quot;registered&amp;quot;))

e_data_excl &amp;lt;- user_excl %&amp;gt;%
  left_join(exp_full, by = c(&amp;quot;session_id&amp;quot;, &amp;quot;user_id&amp;quot;))&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;glimpse(e_data_excl)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Rows: 1,440
## Columns: 11
## $ session_id  &amp;lt;dbl&amp;gt; 60509, 60509, 60509, 60509, 60509, 60509, 60509, 60509, 60‚Ä¶
## $ user_id     &amp;lt;dbl&amp;gt; 53422, 53422, 53422, 53422, 53422, 53422, 53422, 53422, 53‚Ä¶
## $ user_sex    &amp;lt;chr&amp;gt; &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;, &amp;quot;female&amp;quot;‚Ä¶
## $ user_status &amp;lt;chr&amp;gt; &amp;quot;guest&amp;quot;, &amp;quot;guest&amp;quot;, &amp;quot;guest&amp;quot;, &amp;quot;guest&amp;quot;, &amp;quot;guest&amp;quot;, &amp;quot;guest&amp;quot;, &amp;quot;gue‚Ä¶
## $ user_age    &amp;lt;dbl&amp;gt; 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 61, 0, 0, 0, 0‚Ä¶
## $ exp_name    &amp;lt;chr&amp;gt; &amp;quot;Appropriate&amp;quot;, &amp;quot;Appropriate&amp;quot;, &amp;quot;Appropriate&amp;quot;, &amp;quot;Appropriate&amp;quot;‚Ä¶
## $ trial_name  &amp;lt;chr&amp;gt; &amp;quot;penguins-429134_640&amp;quot;, &amp;quot;bird-349035_640&amp;quot;, &amp;quot;hedgehog-468228‚Ä¶
## $ dv          &amp;lt;dbl&amp;gt; 1, 4, 5, 1, 7, 1, 7, 6, 1, 7, 1, 1, 4, 4, 4, 4, 4, 4, 4, 4‚Ä¶
## $ name        &amp;lt;chr&amp;gt; &amp;quot;penguin&amp;quot;, &amp;quot;chicken&amp;quot;, &amp;quot;hedgehog&amp;quot;, &amp;quot;squirrel&amp;quot;, &amp;quot;kitten2&amp;quot;, &amp;quot;‚Ä¶
## $ is_baby     &amp;lt;dbl&amp;gt; 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 0‚Ä¶
## $ mammal      &amp;lt;dbl&amp;gt; 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 0, 1‚Ä¶&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;joining-questionnaire-and-experiment-data&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Joining Questionnaire and Experiment Data&lt;/h2&gt;
&lt;p&gt;Often, it makes most sense to process questionnaire data in wide format and experiment data in long format. If you need to add wide questionnaire data to a long experiment table, left join the questionnaire like this:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;all_data &amp;lt;- e_data_excl %&amp;gt;%
  left_join(q_data_excl, by = c(&amp;quot;session_id&amp;quot;, &amp;quot;user_id&amp;quot;))

names(all_data)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##  [1] &amp;quot;session_id&amp;quot;     &amp;quot;user_id&amp;quot;        &amp;quot;user_sex.x&amp;quot;     &amp;quot;user_status.x&amp;quot; 
##  [5] &amp;quot;user_age.x&amp;quot;     &amp;quot;exp_name&amp;quot;       &amp;quot;trial_name&amp;quot;     &amp;quot;dv&amp;quot;            
##  [9] &amp;quot;name&amp;quot;           &amp;quot;is_baby&amp;quot;        &amp;quot;mammal&amp;quot;         &amp;quot;user_sex.y&amp;quot;    
## [13] &amp;quot;user_status.y&amp;quot;  &amp;quot;user_age.y&amp;quot;     &amp;quot;bmis&amp;quot;           &amp;quot;colour&amp;quot;        
## [17] &amp;quot;exercise&amp;quot;       &amp;quot;fiber_arts&amp;quot;     &amp;quot;hats&amp;quot;           &amp;quot;native_english&amp;quot;
## [21] &amp;quot;pets&amp;quot;           &amp;quot;spiders&amp;quot;        &amp;quot;pets.b&amp;quot;         &amp;quot;fiber_arts.b&amp;quot;  
## [25] &amp;quot;colours_fixed&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now go explore your data!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://debruine.github.io/post/demodata_files/figure-html/unnamed-chunk-27-1.png&#34; width=&#34;100%&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
